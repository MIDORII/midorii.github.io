<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[小红书之前的小准备]]></title>
    <url>%2F2019%2F09%2F10%2F%E5%B0%8F%E7%BA%A2%E4%B9%A6%E4%B9%8B%E5%89%8D%E7%9A%84%E5%B0%8F%E5%87%86%E5%A4%87%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[瓜子小准备和问题和招银问题]]></title>
    <url>%2F2019%2F09%2F06%2F%E7%93%9C%E5%AD%90%E5%89%8D%E7%9A%84%E5%B0%8F%E5%87%86%E5%A4%87%2F</url>
    <content type="text"><![CDATA[先说招银电面问题叭 1.讲对控制反转和依赖插入的理解。2.JAVA中线程实现的方法。3.hashmap的理解、对线程安全的理解、hashmap的线程安全具体实现。4.final和finally差异。 瓜子小问题 瓜子小准备1.socket编程函数：服务器：socket()创建；bind()绑定IP、端口；listen()设置最大连接；accept()接受客户端连接；send()recv()收发data；客户端：socket()；bind()；connect();send()recv();2.死锁：互斥、请求与保持、不可剥夺、环路等待。3.LRU：最近最少使用。链表，最新放尾部，最近访问放尾部，删表头。实现，LinkedHashMap,removeEldestEntry.4.进程间通信：临界区、事件、信号量、互斥量。进程内存独有。 线程间通信：全局变量、Message、CEvent。线程内存共享，CPU调度分配最小单位。5.稳定：插冒归基。不稳：希选堆快。6.进程切换：虚拟内存。shutdown:howto值，0读1写2读写；close：立即关，对别的开。7.服务器共享session：MySQL、通过cookie、redis、还有个啥来着。8.进程调度：FCFS、短作业优先、优先权、时间片、高相应比（响应时间/需求服务时间）。9.运行–&gt;阻塞–&gt;(sleep.join)就绪–&gt;运行；运行–(wait)等待；运行–锁池；锁池–就绪。10.垃圾回收（？）：复制、标记整理、标记清除、引用计数、分代。11.LinuxL:看内存atop、ntop(实时内存)、free；网络状态netstat；磁盘空间df；tail日志跟新；top资源占用；grep字符串匹配；sudo授权。]]></content>
  </entry>
  <entry>
    <title><![CDATA[剑指offer]]></title>
    <url>%2F2019%2F08%2F21%2F%E5%89%91%E6%8C%87offer%2F</url>
    <content type="text"><![CDATA[也不是我写的啦，看到的简单记录下最优解法，68个都记一下吧。先一半。 3.数组中重复数字： 将值为i的元素调整到第i个位置求解。4.二维数组查找： 从右上角开始，小于它的数在其左边，大于它的数在其右边。5.空格替换： 两个指针从最右边遍历，遇到空格填充替换字符。6.逆序打印链表： 递归、头插法、栈。7.根据前序遍历和中序遍历重建二叉树（不含重复数）： 前序第一个值为根，把中序分两部分。 private Map&lt;Integer, Integer&gt; indexForInOrders = new HashMap&lt;&gt;();8.给定二叉树和一个节点，找其中序遍历下一个节点(节点有指向父节点指针): 右子树不为空，为右子树最左节点；否则向上找第一个左链接指向的树包含该节点的祖先节点。9.两个栈实现队列： 一个处理push，另一个处理pop，出的时候先进pop再出。10.斐波那契数列：用数组缓存一下计算过的数据。 n个21矩形覆盖一个2n，几种方法；跳台阶（1or2步）：找递推公式。 变态跳台阶（1or2or…n步）：等比数列f(n) = 2f(n-1)；动态规划。11.输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素： 用改良二分法，将数组一分为二，一个是包含最小元素的新旋转数组，另一个是非递减排序的数组（第一个元素一个小于等于最后一个元素），多次二分即可。12.字符矩阵路径： 回溯法（暴力搜索）。13.机器人运动范围： 回溯深搜。14.一根升子剪多段，每段长度乘积最大： 贪心，优先3、2；动态规划。15.输出一个数二进制表示中1的个数： n&amp;(n-1)位运算，每做一次ans++，至0。16.base（浮点数） 的 exponent（整数） 次方： (xx)n/可以递归求解。17.打印从1到最大n位数： char数组存储数字，回溯法得到所有数。18.O(1)时间删除链表节点（删重复节点类似）： 非尾节点，将下一个节点值给它，把下一个删了；尾节点则将它前面一个节点指向null。19.正则表达式匹配（.一个，a任意个a）： dp[0][0] = true; for (int i = 1; i &lt;= n; i++) if (pattern[i - 1] == ‘‘) dp[0][i] = dp[0][i - 2]; for (int i = 1; i &lt;= m; i++) for (int j = 1; j &lt;= n; j++) if (str[i - 1] == pattern[j - 1] || pattern[j - 1] == &apos;.&apos;) dp[i][j] = dp[i - 1][j - 1]; else if (pattern[j - 1] == &apos;*&apos;) if (pattern[j - 2] == str[i - 1] || pattern[j - 2] == &apos;.&apos;) { dp[i][j] |= dp[i][j - 1]; // a* counts as single a dp[i][j] |= dp[i - 1][j]; // a* counts as multiple a dp[i][j] |= dp[i][j - 2]; // a* counts as empty } else dp[i][j] = dp[i][j - 2]; // a* only counts as empty20.表示数值的字符串： 正则表达式匹配，return new String(str).matches(“[+-]?\d*(\.\d+)?([eE][+-]?\d+)?”); [] ： 字符集合 () ： 分组 ? ： 重复 0 ~ 1 次 + ： 重复 1 ~ n 次 * ： 重复 0 ~ n 次 . ： 任意字符 \. ： 转义后的 . \d ： 数字21.调整数组顺序使奇数位于偶数前面： 创新数组或者冒泡。22.链表中倒数第 K 个结点： 设置两个指针 P1 和 P2，先让 P1 移动 K 个节点，再同时移动。23.链表中环的入口结点： 一个指针每次移动两个，另一个指针每次移动一个，存在环必定相遇，此点即入口。24.反转链表： 递归，或者头插法迭代。25.合并两个排序的链表： 递归或者迭代。26.树的子结构：]]></content>
  </entry>
  <entry>
    <title><![CDATA[严选和猿辅导的查缺补漏]]></title>
    <url>%2F2019%2F08%2F18%2F%E7%BD%91%E6%98%93%E4%B8%A5%E9%80%89%E7%9A%84%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F%2F</url>
    <content type="text"><![CDATA[1.]]></content>
  </entry>
  <entry>
    <title><![CDATA[网易严选面试前的小准备]]></title>
    <url>%2F2019%2F08%2F17%2F%E7%BD%91%E6%98%93%E4%B8%A5%E9%80%89%E9%9D%A2%E8%AF%95%E5%89%8D%E7%9A%84%E5%B0%8F%E5%87%86%E5%A4%87%2F</url>
    <content type="text"><![CDATA[1.string不可变，string buffer和string builder可变；string builder非线性安全，其余两个线性安全。 2.输入域名到看到页面过程：域名解析成IP，TCP三次握手，发送HTTP请求，处理请求返回HTTP报文，四次挥手。3.JAVA内存模型：JAVA虚拟机=线程栈+堆，每个线程都有自己的线程栈，所有的创建对象放在堆里，所有原始类型的本地变量和调用栈放线程栈中。 硬件内存模型与JAVA内存模型的一致性：CPU缓存和指令重排。 synchronized volatile4.MySQL索引：普通index，唯一primary key &amp; unique.，联合，全文fulltext，空间。 hash索引适合等值查询，B+树适合范围查询。B+树比B树查询效率平均。5.error程序本身无法解决，exception程序本身可以解决。6.kafka消息丢失问题：开启重试 or 配置acks = all。7.hashmap:数组和链表，散列桶，存储键值对。8.hashmap 效率高但是线程不安全，hashtable和concurrenthashmap线程安全；hashset存储对象。9.vector同步，arraylist不同步。10.concurrenthashmap线程安全：数据分一段一段，每段一把锁。11.synchronized解决多线程访问资源同步性，它和reentrantlock都是可重入，前者依赖JVM，后者依赖高级API。12.线程把变量保存到本地内存，而主存可以更改数据，这会导致数据不一致。13.volatile修饰变量，它不会阻塞，有可见性，没有原子性；synchronized修饰方法和代码块，与前者相反。14.JUC原子类：基本，数组，引用，对象属性修改。15.AQS构建锁和同步器，使用CLH队列锁。16.集合类：list和set继承collection，map继承map。17.redis：string，hash，list，set，sorted set。淘汰机制。过期时间。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F17%2FHello-World%2F</url>
    <content type="text"><![CDATA[hello world!]]></content>
  </entry>
</search>
